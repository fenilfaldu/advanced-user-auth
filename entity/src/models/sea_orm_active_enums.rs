//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "api_user_access")]
#[serde(rename_all = "snake_case")]
pub enum ApiUserAccess {
    #[sea_orm(string_value = "admin")]
    Admin,
    #[sea_orm(string_value = "delete")]
    Delete,
    #[sea_orm(string_value = "read")]
    Read,
    #[sea_orm(string_value = "update")]
    Update,
    #[sea_orm(string_value = "write")]
    Write,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "api_user_scope")]
#[serde(rename_all = "snake_case")]
pub enum ApiUserScope {
    #[sea_orm(string_value = "client")]
    Client,
    #[sea_orm(string_value = "realm")]
    Realm,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "verification_type")]
#[serde(rename_all = "snake_case")]
pub enum VerificationType {
    #[sea_orm(string_value = "email")]
    Email,
    #[sea_orm(string_value = "forgot_password")]
    ForgotPassword,
    #[sea_orm(string_value = "mfa")]
    Mfa,
    #[sea_orm(string_value = "otp")]
    Otp,
    #[sea_orm(string_value = "passwordless")]
    Passwordless,
    #[sea_orm(string_value = "phone")]
    Phone,
}
